stages:
  - build
  - deploy

variables:
  APPLICATION_NAME: mendokusai-front

  ECR_URL: 732469118990.dkr.ecr.ap-northeast-1.amazonaws.com

  CONTAINER_TAG: legacy-${CI_COMMIT_SHORT_SHA}
  CONTAINER_IMAGE: ${ECR_URL}/${APPLICATION_NAME}
  CONTAINER_IMAGE_TAGGED: ${CONTAINER_IMAGE}:${CONTAINER_TAG}

  K8S_SERVICE_PORT: 30555
  K8S_ECR_SECRET: ecr-credentials

image: moreillon/ci-dind:4bca50d7
services:
  - name: docker:19.03.12-dind

build:
  stage: build
  tags:
    - dind
  only:
    - legacy
  before_script:
    # ECR login for pushing
    - >
      aws ecr get-login-password
      | docker login
      --username AWS
      --password-stdin
      ${ECR_URL}
    # Create repository if needed
    - >
      aws ecr create-repository --repository-name ${APPLICATION_NAME}
      || echo "Repository might have already existed"
  script:
    - docker build -t ${CONTAINER_IMAGE_TAGGED} .
    - docker push ${CONTAINER_IMAGE_TAGGED}

deploy:
  stage: deploy
  only:
    - legacy
  tags:
    - dind
  before_script:
    - >
      kubectl create secret docker-registry ${K8S_ECR_SECRET}
      --docker-server=${ECR_URL}
      --docker-username=AWS
      --docker-password $(aws ecr get-login-password)
      --dry-run=client -o yaml
      | kubectl apply -f -
  script:
    # create/update the deployment
    - envsubst < kubernetes_manifest.yml | kubectl apply -f -
  environment:
    name: production
    kubernetes:
      # Namespace obtained from GitLab
      namespace: ${KUBERNETES_NAMESPACE}
